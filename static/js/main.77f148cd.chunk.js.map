{"version":3,"sources":["components/ToSTIX/to_stix.module.scss","components/FromSTIX/from_stix.module.scss","components/STIX/stix.module.scss","components/Welcome/welcome.module.scss","components/Welcome/logo-no-bg.png","components/Export/export.module.scss","components/Import/import.module.scss","global/constants.js","store/actions/stix.js","components/Header/index.js","components/Header/HeaderSection.jsx","components/Welcome/Welcome.jsx","store/actions/from_stix.js","global/stixHelper.js","components/FromSTIX/CustomFieldModal.js","components/FromSTIX/CustomField.jsx","store/actions/to_stix.js","components/STIX/AddFieldItems.jsx","components/STIX/FieldSearchBar.jsx","components/STIX/ChangeVersion.jsx","components/STIX/SelectField.jsx","components/FromSTIX/AddFields.jsx","components/FromSTIX/MappingItem.jsx","components/FromSTIX/MappingsFilterBar.jsx","components/FromSTIX/utils.js","components/FromSTIX/Mapping.jsx","components/Export/Export.jsx","components/Import/Import.jsx","components/FromSTIX/StatisticObject.jsx","components/FromSTIX/Statistics.jsx","global/requiredFields.js","components/FromSTIX/index.js","components/FromSTIX/FromSTIX.jsx","global/transformers.js","components/ToSTIX/ReferencesSelector.jsx","components/ToSTIX/StixField.jsx","components/ToSTIX/StixFieldsTable.jsx","components/ToSTIX/SourceField.jsx","components/ToSTIX/MappingObject.jsx","components/ToSTIX/MappingObjects.jsx","components/ToSTIX/SelectFieldModal.jsx","components/ToSTIX/Mapping.jsx","components/ToSTIX/NewObjectModal.jsx","components/ToSTIX/utils.js","components/ToSTIX/StatisticObject.jsx","components/ToSTIX/Statistics.jsx","components/ToSTIX/index.js","components/ToSTIX/ToSTIX.jsx","components/About/index.js","components/About/About.jsx","global/stixLangV2.js","global/stixLangV2_1.js","components/STIX/utils.js","store/reducers/stix.js","store/reducers/from_stix.js","store/reducers/to_stix.js","store/reducers/index.js","store/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","STIX_VERSION","changeStixVersion","stixVersion","type","payload","version","HeaderSection","dispatch","useDispatch","Header","aria-label","SkipToContent","HeaderName","element","Link","to","prefix","HeaderNavigation","HeaderMenuItem","onClick","Welcome","history","useHistory","handleClickableTile","link","push","className","src","logo","alt","width","handleClick","styles","tile__btn","addField","field","required","updateMappingsFromFile","mappings","clearMappings","isValidCustomStixField","customField","test","CustomFieldModal","customFieldModalShow","useSelector","state","fromStix","useState","setCustomField","Modal","open","size","modalHeading","primaryButtonText","secondaryButtonText","onRequestClose","onRequestSubmit","split","key","primaryButtonDisabled","shouldSubmitOnEnter","hasForm","TextInput","id","labelText","onChange","e","target","value","invalid","invalidText","CustomField","Button","kind","updateStixField","objectName","fieldId","mappingId","AddFieldItems","title","items","stixFieldId","updateType","objects","AccordionItem","length","map","item","name","has","selectStixField","field__item","colored","hover","FieldSearchBar","fieldSearch","Search","light","event","placeHolderText","stixVersionsList","label","ChangeVersion","stix","Dropdown","ariaLabel","selectedItem","find","o","SelectField","stixFields","full_height__col","add_fields__col","Accordion","AddFields","MappingItem","values","mapping","mapping__item","style","marginBottom","mapping_item__title","mapping_item__btn_top","mapping_item__btn","border","marginRight","v","autoComplete","input","margin","mapping__item_empty","MappingsFilterBar","fieldMappingFilter","placeholder","stateMappingToShifterMapping","stateMapping","output","Object","keys","forEach","fields","loadJsonFromDisk","obj","shifterMapping","uuidv4","shifterMappingToStateMapping","Mapping","mappings_clear__btn","mapping__col","lowerCaseValue","toLowerCase","filter","category","includes","reduce","filterMappingFieldsForValue","Export","props","exportFilename","setExportFilename","export__col","textAlign","disabled","renderIcon","Save16","filename","blob","Blob","JSON","stringify","saveAs","saveJsonToDisk","Import","import__col","FileUploader","accept","buttonKind","buttonLabel","filenameStatus","multiple","onDelete","reader","FileReader","onload","_event","parse","result","readAsText","files","iconDescription","labelDescription","labelTitle","StatisticObject","officialObjectsCount","requiredObjectsCount","officialFieldsCount","requiredFieldsCount","objectsStatistics","coverage_percent","Math","round","coverage_count","Statistics","useMemo","getNumOfFields","statistics__col","requiredFields","stix_version_2_0","Set","stix_version_2_1","FromSTIX","requiredSet","stixFieldsObject","officialObjects","requiredObjects","coverage","assign","Array","from","val","add","getObjectsData","transformers","ReferencesSelector","selectedReferences","objectKey","sourceFieldId","toStix","allAvailableObjectKeys","MultiSelect","useTitleInItem","referenceObjectName","selectedItems","initialSelectedItems","itemToString","inline","React","memo","stixFieldKey","stixFieldTransformer","stixFieldReferences","object_item__field","openSelectFieldModal","object_item__btn","StixFieldsTableHeader","object_item_field__header","StixFieldsTableBody","stixFieldsData","stixField","transformer","references","StixFieldsTable","sourceFieldData","mapped_to","SourceFieldHeader","fieldData","marginLeft","removeDataSourceField","fieldName","updateDataSourceField","object_item__map","ObjectHeader","isOpen","setIsOpen","cursor","object_item__title","preventDefault","stopPropagation","ObjectBody","sourceFields","objectData","object__item_box","object__item_content","MappingObjects","paddingTop","SelectFieldModal","selectFieldModal","passiveModal","Add32","NewObjectModal","isNewObjectModalOpen","setObjectName","helperText","dataSourceField","object","dataSourceFieldId","mapped_to_id","ids","getDataSourceFieldId","mappedTo","replace","console","log","newFieldName","_field","index","fieldsCount","objectsCount","sum","stixTypesSet","officialFields","CustomFields","CustomObjects","startsWith","getDataForStatistics","customFieldsCount","customObjectsCount","ToSTIX","About","align","href","UnorderedList","ListItem","stixLanguageV2","stixLanguageV2_1","filterFieldsForValue","filteredFields","INITIAL_STATE","stixLanguageV2_0","STIXReducer","action","FromSTIXReducer","ToSTIXReducer","restOfMapping","restOfFields","combinedReducers","combineReducers","store","createStore","CombinedReducers","window","__REDUX_DEVTOOLS_EXTENSION__","App","Content","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77f148cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"object__item_box\":\"to_stix_object__item_box__3rr3c\",\"object__item_content\":\"to_stix_object__item_content__1bWt0\",\"object_item__btn\":\"to_stix_object_item__btn__mEa_v\",\"object_item__title\":\"to_stix_object_item__title__2EOEa\",\"object_item__map\":\"to_stix_object_item__map__11qL1\",\"object_item__field\":\"to_stix_object_item__field__c6qbN\",\"object_item_field__header\":\"to_stix_object_item_field__header__3uGd8\",\"statistics__col\":\"to_stix_statistics__col__3B4_C\",\"title\":\"to_stix_title__1j-_I\",\"coverage_percent\":\"to_stix_coverage_percent__1MuDs\",\"coverage_count\":\"to_stix_coverage_count__2mmRu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full_height__col\":\"from_stix_full_height__col__1eQ-_\",\"mappings_clear__btn\":\"from_stix_mappings_clear__btn__2uZYz\",\"mapping__col\":\"from_stix_mapping__col__2hj1M\",\"mapping__item\":\"from_stix_mapping__item__2zbU-\",\"mapping__item_empty\":\"from_stix_mapping__item_empty__2ASue\",\"mapping_item__title\":\"from_stix_mapping_item__title__3lf6b\",\"mapping_item__btn\":\"from_stix_mapping_item__btn__2F3K3\",\"mapping_item__btn_top\":\"from_stix_mapping_item__btn_top__1uHP6\",\"export__col\":\"from_stix_export__col__eJkaX\",\"import__col\":\"from_stix_import__col__-Iooq\",\"statistics__col\":\"from_stix_statistics__col__3p8y7\",\"title\":\"from_stix_title__1OqJJ\",\"coverage_percent\":\"from_stix_coverage_percent__1w-W7\",\"coverage_count\":\"from_stix_coverage_count__sw3gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full_height__col\":\"stix_full_height__col__1AWJO\",\"add_fields__col\":\"stix_add_fields__col__2Vl3O\",\"field__title\":\"stix_field__title__23yrc\",\"field__item\":\"stix_field__item__3Zx1b\",\"colored\":\"stix_colored__3Ifb3\",\"hover\":\"stix_hover__YWNMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile__btn\":\"welcome_tile__btn__1S4p7\"};","module.exports = __webpack_public_path__ + \"static/media/logo-no-bg.a33c514a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"export__col\":\"export_export__col__2dFQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"import__col\":\"import_import__col__3Dz6_\"};","export const STIX_VERSION = {\n  V_2_0: \"stix_version_2_0\",\n  V_2_1: \"stix_version_2_1\",\n};\n","export const UPDATE_SEARCH_FIELD_VALUE = \"UPDATE_SEARCH_FIELD_VALUE\";\nexport const CHANGE_STIX_VERSION = \"CHANGE_STIX_VERSION\";\n\nexport function updateSearchFieldValue(value) {\n  return {\n    type: UPDATE_SEARCH_FIELD_VALUE,\n    payload: {\n      value,\n    },\n  };\n}\n\nexport function changeStixVersion(stixVersion) {\n  return {\n    type: CHANGE_STIX_VERSION,\n    payload: {\n      version: stixVersion,\n    },\n  };\n}\n","import HeaderSection from \"./HeaderSection\";\nexport default HeaderSection;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { STIX_VERSION } from \"../../global/constants\";\nimport { changeStixVersion } from \"../../store/actions/stix\";\n\nimport {\n  Header,\n  HeaderName,\n  SkipToContent,\n  HeaderNavigation,\n  HeaderMenuItem,\n} from \"carbon-components-react\";\n\nconst HeaderSection = () => {\n  const dispatch = useDispatch();\n  return (\n    <Header aria-label=\"Carbon Tutorial\">\n      <SkipToContent />\n      <HeaderName element={Link} to=\"/\" prefix=\"MAP\">\n        My Shifter\n      </HeaderName>\n      <HeaderNavigation aria-label=\"Side navigation\">\n        <HeaderMenuItem\n          element={Link}\n          to=\"/from_stix\"\n          onClick={() => dispatch(changeStixVersion(STIX_VERSION.V_2_0))}\n        >\n          From STIX\n        </HeaderMenuItem>\n        <HeaderMenuItem\n          element={Link}\n          to=\"/to_stix\"\n          onClick={() => dispatch(changeStixVersion(STIX_VERSION.V_2_0))}\n        >\n          To STIX\n        </HeaderMenuItem>\n        <HeaderMenuItem element={Link} to=\"/about\">\n          About\n        </HeaderMenuItem>\n      </HeaderNavigation>\n    </Header>\n  );\n};\nexport default HeaderSection;\n","import React from \"react\";\nimport logo from \"./logo-no-bg.png\";\nimport { ClickableTile } from \"carbon-components-react\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./welcome.module.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { STIX_VERSION } from \"../../global/constants\";\nimport { changeStixVersion } from \"../../store/actions/stix\";\n\nconst Welcome = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleClickableTile = (link) => {\n    dispatch(changeStixVersion(STIX_VERSION.V_2_0));\n    history.push(link);\n  };\n\n  return (\n    <>\n      <div className=\"bx--grid\">\n        <div className=\"bx--row\">\n          <div className=\"bx--col\">\n            <img src={logo} alt=\"Logo\" width={300} />\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col\">\n            <p>\n              This tool is used for generating mapping file for `STIX-Shifter`\n              project\n            </p>\n          </div>\n        </div>\n\n        <div className=\"bx--row\">\n          <div className=\"bx--col-sm-2\">\n            <ClickableTile\n              handleClick={() => handleClickableTile(\"/from_stix\")}\n              className={styles.tile__btn}\n            >\n              Generate \"From STIX\" File\n            </ClickableTile>\n          </div>\n          <div className=\"bx--col-sm-2\">\n            <ClickableTile\n              handleClick={() => handleClickableTile(\"/to_stix\")}\n              className={styles.tile__btn}\n            >\n              Generate \"To STIX\" File\n            </ClickableTile>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Welcome;\n","export const ADD_FIELD = \"ADD_FIELD\";\nexport const DELETE_FIELD = \"DELETE_FIELD\";\nexport const ADD_VALUE = \"ADD_VALUE\";\nexport const UPDATE_VALUE = \"UPDATE_VALUE\";\nexport const DELETE_VALUE = \"DELETE_VALUE\";\nexport const UPDATE_SEARCH_FIELD_VALUE = \"UPDATE_SEARCH_FIELD_VALUE\";\nexport const UPDATE_FROM_STIX_MAPPINGS_FROM_FILE =\n  \"UPDATE_FROM_STIX_MAPPINGS_FROM_FILE\";\nexport const UPDATE_MAPPINGS_FILTER_FIELD_VALUE =\n  \"UPDATE_MAPPINGS_FILTER_FIELD_VALUE\";\nexport const CLEAR_FROM_STIX_MAPPINGS = \"CLEAR_FROM_STIX_MAPPINGS\";\nexport const SHOW_CUSTOM_FIELD_MODAL = \"SHOW_CUSTOM_FIELD_MODAL\";\nexport const CLOSE_CUSTOM_FIELD_MODAL = \"CLOSE_CUSTOM_FIELD_MODAL\";\n\nexport function addField(field, required = false) {\n  return {\n    type: ADD_FIELD,\n    payload: {\n      field,\n      required,\n    },\n  };\n}\n\nexport function deleteField(field) {\n  return {\n    type: DELETE_FIELD,\n    payload: {\n      field,\n    },\n  };\n}\n\nexport function addValue(field) {\n  return {\n    type: ADD_VALUE,\n    payload: {\n      field,\n    },\n  };\n}\n\nexport function deleteValue(field, id) {\n  return {\n    type: DELETE_VALUE,\n    payload: {\n      field,\n      id,\n    },\n  };\n}\n\nexport function updateValue(field, id, value) {\n  return {\n    type: UPDATE_VALUE,\n    payload: {\n      field,\n      id,\n      value,\n    },\n  };\n}\n\nexport function updateMappingsFilterFieldValue(value) {\n  return {\n    type: UPDATE_MAPPINGS_FILTER_FIELD_VALUE,\n    payload: {\n      value,\n    },\n  };\n}\n\nexport function updateMappingsFromFile(mappings) {\n  return {\n    type: UPDATE_FROM_STIX_MAPPINGS_FROM_FILE,\n    payload: {\n      mappings,\n    },\n  };\n}\n\nexport function clearMappings() {\n  return {\n    type: CLEAR_FROM_STIX_MAPPINGS,\n  };\n}\n\nexport function showCustomFieldModal() {\n  return {\n    type: SHOW_CUSTOM_FIELD_MODAL,\n  };\n}\n\nexport function closeCustomFieldModal() {\n  return {\n    type: CLOSE_CUSTOM_FIELD_MODAL,\n  };\n}\n","export const isValidCustomStixField = (customField) => {\n  const re = /(^\\S+:+\\S+$)/;\n  return re.test(customField);\n};\n","import React, { useState } from \"react\";\nimport { Modal, TextInput } from \"carbon-components-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closeCustomFieldModal, addField } from \"../../store/actions/from_stix\";\nimport { isValidCustomStixField } from \"../../global/stixHelper\";\n\nconst CustomFieldModal = () => {\n  const customFieldModalShow = useSelector(\n    (state) => state.fromStix.customFieldModalShow\n  );\n  const dispatch = useDispatch();\n  const [customField, setCustomField] = useState(\"\");\n\n  return (\n    <Modal\n      open={customFieldModalShow}\n      size=\"xs\"\n      modalHeading={\"Add custom field\"}\n      primaryButtonText={\"Add\"}\n      secondaryButtonText={\"Cancel\"}\n      onRequestClose={() => {\n        setCustomField(\"\");\n        dispatch(closeCustomFieldModal());\n      }}\n      onRequestSubmit={() => {\n        const [type, key] = customField.split(\":\");\n        dispatch(addField(`${type}:${key}`));\n        setCustomField(\"\");\n        dispatch(closeCustomFieldModal());\n      }}\n      primaryButtonDisabled={!isValidCustomStixField(customField)}\n      shouldSubmitOnEnter={true}\n      hasForm={true}\n    >\n      <TextInput\n        id=\"customField\"\n        type=\"text\"\n        labelText={`e.g \"x-oca-event:category_id\"`}\n        onChange={(e) => {\n          setCustomField(e.target.value);\n        }}\n        invalid={customField !== \"\" && !isValidCustomStixField(customField)}\n        invalidText=\"A valid value is required\"\n      />\n    </Modal>\n  );\n};\n\nexport default CustomFieldModal;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showCustomFieldModal } from \"../../store/actions/from_stix\";\nimport CustomFieldModal from \"./CustomFieldModal\";\nimport { Button } from \"carbon-components-react\";\n\nconst CustomField = () => {\n  const dispatch = useDispatch();\n  const customFieldModalShow = useSelector(\n    (state) => state.fromStix.customFieldModalShow\n  );\n\n  return (\n    <div>\n      <Button\n        kind=\"tertiary\"\n        size=\"sm\"\n        onClick={() => {\n          dispatch(showCustomFieldModal());\n        }}\n      >\n        Custom Field\n      </Button>\n      {customFieldModalShow && <CustomFieldModal />}\n    </div>\n  );\n};\n\nexport default CustomField;\n","export const OPEN_NEW_OBJECT_MODAL = \"OPEN_NEW_OBJECT_MODAL\";\nexport const CLOSE_NEW_OBJECT_MODAL = \"CLOSE_NEW_OBJECT_MODAL\";\nexport const ADD_NEW_OBJECT = \"ADD_NEW_OBJECT\";\nexport const REMOVE_OBJECT = \"REMOVE_OBJECT\";\nexport const ADD_DATASOURCE_FIELD = \"ADD_DATASOURCE_FIELD\";\nexport const REMOVE_DATASOURCE_FIELD = \"REMOVE_DATASOURCE_FIELD\";\nexport const UPDATE_DATASOURCE_FIELD = \"UPDATE_DATASOURCE_FIELD\";\nexport const REMOVE_STIX_FIELD = \"REMOVE_STIX_FIELD\";\nexport const ADD_STIX_FIELD = \"ADD_STIX_FIELD\";\nexport const UPDATE_STIX_FIELD = \"UPDATE_STIX_FIELD\";\nexport const CLEAR_TO_STIX_MAPPINGS = \"CLEAR_TO_STIX_MAPPINGS\";\nexport const UPDATE_TO_STIX_MAPPINGS_FROM_FILE =\n  \"UPDATE_TO_STIX_MAPPINGS_FROM_FILE\";\nexport const OPEN_SELECT_FIELD_MODAL = \"OPEN_SELECT_FIELD_MODAL\";\nexport const CLOSE_SELECT_FIELD_MODAL = \"CLOSE_SELECT_FIELD_MODAL\";\n\nexport function openNewObjectModal() {\n  return {\n    type: OPEN_NEW_OBJECT_MODAL,\n  };\n}\n\nexport function closeNewObjectModal() {\n  return {\n    type: CLOSE_NEW_OBJECT_MODAL,\n  };\n}\n\nexport function openSelectFieldModal(objectKey, sourceFieldId, stixFieldId) {\n  return {\n    type: OPEN_SELECT_FIELD_MODAL,\n    payload: {\n      objectKey,\n      sourceFieldId,\n      stixFieldId,\n    },\n  };\n}\n\nexport function closeSelectFieldModal() {\n  return {\n    type: CLOSE_SELECT_FIELD_MODAL,\n  };\n}\n\nexport function addNewObject(name) {\n  return {\n    type: ADD_NEW_OBJECT,\n    payload: {\n      name,\n    },\n  };\n}\n\nexport function removeObject(name) {\n  return {\n    type: REMOVE_OBJECT,\n    payload: {\n      name,\n    },\n  };\n}\n\nexport function addDataSourceField(objectName, fieldName) {\n  return {\n    type: ADD_DATASOURCE_FIELD,\n    payload: {\n      objectName,\n      fieldName,\n    },\n  };\n}\n\nexport function updateDataSourceField(objectName, fieldId, fieldName) {\n  return {\n    type: UPDATE_DATASOURCE_FIELD,\n    payload: {\n      objectName,\n      fieldId,\n      fieldName,\n    },\n  };\n}\n\nexport function removeDataSourceField(objectName, fieldId) {\n  return {\n    type: REMOVE_DATASOURCE_FIELD,\n    payload: {\n      objectName,\n      fieldId,\n    },\n  };\n}\n\nexport function addStixField(objectName, fieldId, key) {\n  return {\n    type: ADD_STIX_FIELD,\n    payload: {\n      objectName,\n      fieldId,\n      key,\n    },\n  };\n}\n\nexport function updateStixField(objectName, fieldId, mappingId, value, type) {\n  return {\n    type: UPDATE_STIX_FIELD,\n    payload: {\n      objectName,\n      fieldId,\n      mappingId,\n      value,\n      type,\n    },\n  };\n}\n\nexport function removeStixField(objectName, fieldId, mappingId) {\n  return {\n    type: REMOVE_STIX_FIELD,\n    payload: {\n      objectName,\n      fieldId,\n      mappingId,\n    },\n  };\n}\n\nexport function clearMappings() {\n  return {\n    type: CLEAR_TO_STIX_MAPPINGS,\n  };\n}\n\nexport function updateMappingsFromFile(mappings) {\n  return {\n    type: UPDATE_TO_STIX_MAPPINGS_FROM_FILE,\n    payload: {\n      mappings,\n    },\n  };\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AccordionItem } from \"carbon-components-react\";\nimport styles from \"./stix.module.scss\";\nimport {\n  closeSelectFieldModal,\n  updateStixField,\n} from \"../../store/actions/to_stix\";\nimport { addField } from \"../../store/actions/from_stix\";\n\nconst AddFieldItems = ({\n  title,\n  type,\n  items,\n  objectName,\n  fieldId,\n  stixFieldId,\n  updateType,\n  objects,\n}) => {\n  const dispatch = useDispatch();\n\n  const selectStixField = (\n    value,\n    required,\n    objectName,\n    fieldId,\n    stixFieldId,\n    updateType\n  ) => {\n    if (objectName && fieldId && stixFieldId && updateType) {\n      dispatch(\n        updateStixField(\n          objectName,\n          fieldId,\n          stixFieldId,\n          value,\n          updateType,\n          required\n        )\n      );\n      dispatch(closeSelectFieldModal());\n    } else {\n      if (!objects[type].has(value.split(\":\")[1])) {\n        dispatch(addField(value, required));\n      }\n    }\n  };\n\n  return (\n    <AccordionItem\n      title={\n        objects\n          ? `${title}  (${objects[type].size}/${items.length})`\n          : `${title}`\n      }\n    >\n      <ul>\n        {items.map((item) => (\n          <li\n            key={item.name}\n            onClick={() => {\n              selectStixField(\n                `${type}:${item.name}`,\n                item.required,\n                objectName,\n                fieldId,\n                stixFieldId,\n                updateType\n              );\n            }}\n            className={\n              objects && objects[type].has(`${item.name}`)\n                ? `${styles.field__item} ${styles.colored}`\n                : `${styles.field__item} ${styles.hover}`\n            }\n          >\n            {item.name} {item.required ? \"(*)\" : \"\"}\n          </li>\n        ))}\n      </ul>\n    </AccordionItem>\n  );\n};\n\nexport default AddFieldItems;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Search } from \"carbon-components-react\";\nimport { updateSearchFieldValue } from \"../../store/actions/stix\";\n\nconst FieldSearchBar = () => {\n  const dispatch = useDispatch();\n  const fieldSearch = useSelector((state) => state.fromStix.fieldSearch);\n  return (\n    <Search\n      light={true}\n      labelText={\"search\"}\n      size={\"sm\"}\n      value={fieldSearch}\n      onChange={(event) => {\n        dispatch(updateSearchFieldValue(event.target.value));\n      }}\n      placeHolderText={\"Search field…\"}\n    />\n  );\n};\n\nexport default FieldSearchBar;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dropdown } from \"carbon-components-react\";\nimport { changeStixVersion } from \"../../store/actions/stix\";\nimport { STIX_VERSION } from \"../../global/constants\";\n\nconst stixVersionsList = [\n  {\n    id: STIX_VERSION.V_2_0,\n    label: \"STIX version 2.0\",\n  },\n  {\n    id: STIX_VERSION.V_2_1,\n    label: \"STIX version 2.1\",\n  },\n];\n\nconst ChangeVersion = () => {\n  const dispatch = useDispatch();\n  const stixVersion = useSelector((state) => state.stix.stixVersion);\n  return (\n    <div>\n      <Dropdown\n        ariaLabel=\"Dropdown\"\n        label=\"Select STIX version\"\n        selectedItem={stixVersionsList.find((o) => o.id === stixVersion)}\n        id=\"version-of-stix\"\n        items={stixVersionsList}\n        onChange={(event) => {\n          dispatch(changeStixVersion(event.selectedItem.id));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ChangeVersion;\n","import React from \"react\";\nimport { Accordion } from \"carbon-components-react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./stix.module.scss\";\nimport AddFieldItems from \"./AddFieldItems\";\nimport FieldSearchBar from \"./FieldSearchBar\";\nimport ChangeVersion from \"./ChangeVersion\";\n\nconst SelectField = ({ objectName, fieldId, stixFieldId, type, objects }) => {\n  const stixFields = useSelector((state) => state.stix.stixFields);\n\n  return (\n    <>\n      <div className=\"bx--row\">\n        <div className=\"bx--col\">\n          <ChangeVersion />\n        </div>\n      </div>\n\n      <div className=\"bx--row\">\n        <div\n          className={`bx--col ${styles.full_height__col} ${styles.add_fields__col}`}\n        >\n          <FieldSearchBar />\n          <Accordion>\n            {stixFields.map((o) => (\n              <AddFieldItems\n                key={o.title}\n                title={o.title}\n                type={o.type}\n                items={o.items}\n                objectName={objectName}\n                fieldId={fieldId}\n                stixFieldId={stixFieldId}\n                updateType={type}\n                objects={objects}\n              />\n            ))}\n          </Accordion>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport CustomField from \"./CustomField\";\nimport SelectField from \"../STIX/SelectField\";\n\nconst AddFields = ({ objects }) => {\n  return (\n    <>\n      <div className=\"bx--row\">\n        <div className=\"bx--col\">\n          <h4 className=\"section-title\">Select Fields</h4>\n        </div>\n        <div>\n          <CustomField />\n        </div>\n      </div>\n\n      <SelectField objects={objects} />\n    </>\n  );\n};\n\nexport default AddFields;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteField,\n  addValue,\n  deleteValue,\n  updateValue,\n} from \"../../store/actions/from_stix\";\nimport { TextInput } from \"carbon-components-react\";\nimport { Delete20, Close16, Add16 } from \"@carbon/icons-react\";\nimport styles from \"./from_stix.module.scss\";\n\nconst MappingItem = ({ title }) => {\n  const values = useSelector((state) => state.fromStix.mapping[title].values);\n  const dispatch = useDispatch();\n  return (\n    <li className={styles.mapping__item}>\n      <div className=\"bx--row\" style={{ marginBottom: \".5rem\" }}>\n        <div className=\"bx--col-sm-3\">\n          <h1 className={styles.mapping_item__title}>{title}</h1>\n        </div>\n        <div className={`bx--col-sm-1 ${styles.mapping_item__btn_top}`}>\n          <Add16\n            className={`${styles.mapping_item__btn}`}\n            style={{ border: \"1px solid #000000\", marginRight: \".5rem\" }}\n            onClick={() => {\n              dispatch(addValue(title));\n            }}\n          />\n          <Close16\n            className={`${styles.mapping_item__btn}`}\n            style={{ border: \"1px solid #000000\" }}\n            onClick={() => {\n              dispatch(deleteField(title));\n            }}\n          />\n        </div>\n      </div>\n\n      {values.length > 0 ? (\n        values.map((v) => (\n          <div\n            key={`${title}_${v.id}`}\n            className=\"bx--row\"\n            style={{ marginBottom: \"1rem\" }}\n          >\n            <div className=\"bx--col-sm-3\">\n              <TextInput\n                id={`${title}_${v.id}`}\n                labelText={\"\"}\n                autoComplete={\"off\"}\n                value={v.value}\n                onChange={(input) => {\n                  dispatch(updateValue(title, v.id, input.target.value));\n                }}\n              />\n            </div>\n            <div className=\"bx--col-sm-1\" style={{ margin: \"auto\" }}>\n              <Delete20\n                className={`${styles.mapping_item__btn}`}\n                onClick={() => {\n                  dispatch(deleteValue(title, v.id));\n                }}\n              />\n            </div>\n          </div>\n        ))\n      ) : (\n        <div className={styles.mapping__item_empty}>\n          Use the [+] button to add values.\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default MappingItem;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TextInput } from \"carbon-components-react\";\nimport { updateMappingsFilterFieldValue } from \"../../store/actions/from_stix\";\n\nconst MappingsFilterBar = () => {\n  const dispatch = useDispatch();\n  const fieldMappingFilter = useSelector(\n    (state) => state.fromStix.fieldMappingFilter\n  );\n  return (\n    <TextInput\n      light={true}\n      value={fieldMappingFilter}\n      onChange={(event) => {\n        dispatch(updateMappingsFilterFieldValue(event.target.value));\n      }}\n      labelText=\"\"\n      id={\"mappings-filter-input\"}\n      placeholder={\"Filter field…\"}\n    />\n  );\n};\n\nexport default MappingsFilterBar;\n","import { saveAs } from \"file-saver\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function stateMappingToShifterMapping(stateMapping) {\n  let output = {};\n  Object.keys(stateMapping).forEach((field) => {\n    const type = field.split(\":\")[0];\n    const key = field.split(\":\")[1];\n    if (!(type in output)) {\n      output[type] = { fields: {} };\n    }\n    output[type][\"fields\"][key] = stateMapping[field].values.map(\n      (o) => o.value\n    );\n  });\n  return output;\n}\n\nexport function saveJsonToDisk(filename, obj) {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], {\n    type: \"application/json\",\n  });\n  saveAs(blob, filename);\n}\n\nexport function loadJsonFromDisk(obj) {\n  return shifterMappingToStateMapping(obj);\n}\n\nfunction shifterMappingToStateMapping(shifterMapping) {\n  let stateMapping = {};\n  if (!shifterMapping) return stateMapping;\n  Object.keys(shifterMapping).forEach((type) => {\n    if (\"fields\" in shifterMapping[type]) {\n      const fields = shifterMapping[type][\"fields\"];\n      Object.keys(fields).forEach((key) => {\n        stateMapping[`${type}:${key}`] = {\n          values: fields[key].map((value) => ({\n            value,\n            id: uuidv4(),\n          })),\n        };\n      });\n    }\n  });\n  return stateMapping;\n}\n\nexport function filterMappingFieldsForValue(mappings, value) {\n  if (!value || value === \"\") return mappings;\n  const lowerCaseValue = value.toLowerCase();\n  return Object.keys(mappings)\n    .filter((category) => category.toLowerCase().includes(lowerCaseValue))\n    .reduce((obj, key) => {\n      obj[key] = mappings[key];\n      return obj;\n    }, {});\n}\n\nexport function getObjectsData(mapping, stixFieldsObject, requiredSet) {\n  const officialObjects = new Set();\n  const requiredObjects = new Set();\n  const coverage = Object.assign(\n    {},\n    ...Array.from(Object.keys(stixFieldsObject), (value) => ({\n      [value]: new Set(),\n    }))\n  );\n  Object.keys(mapping).forEach((field) => {\n    const [type, key] = field.split(\":\");\n    if (Object.keys(mapping[field].values).length > 0) {\n      Object.keys(mapping[field].values).forEach((val) => {\n        if (\n          mapping[field].values[val].value !== \"\" &&\n          stixFieldsObject[type]?.includes(key)\n        ) {\n          officialObjects.add(`${type}:${key}`);\n          coverage[type].add(`${key}`);\n          if (requiredSet.has(`${type}:${key}`)) {\n            requiredObjects.add(`${type}:${key}`);\n          }\n        }\n      });\n    }\n  });\n  return [coverage, officialObjects.size, requiredObjects.size];\n}\n\nexport function getNumOfFields(stixFields) {\n  let officialFieldsCount = 0;\n  let requiredFieldsCount = 0;\n  Object.keys(stixFields).forEach((field) => {\n    officialFieldsCount += stixFields[field].items.length;\n    Object.keys(stixFields[field].items).forEach((item) => {\n      if (stixFields[field].items[item].required) {\n        requiredFieldsCount += 1;\n      }\n    });\n  });\n  return [officialFieldsCount, requiredFieldsCount];\n}\n\nexport function mappedItems() {}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./from_stix.module.scss\";\nimport MappingItem from \"./MappingItem\";\nimport MappingsFilterBar from \"./MappingsFilterBar\";\nimport { filterMappingFieldsForValue } from \"./utils\";\nimport { clearMappings } from \"../../store/actions/from_stix\";\n\nconst Mapping = () => {\n  const dispatch = useDispatch();\n  const mapping = useSelector((state) => state.fromStix.mapping);\n  const fieldMappingFilter = useSelector(\n    (state) => state.fromStix.fieldMappingFilter\n  );\n\n  return (\n    <>\n      <div className=\"bx--row\">\n        <div className=\"bx--col\">\n          <h4 className=\"section-title\">\n            {Object.keys(mapping).length} Total Fields{\" \"}\n            <span\n              onClick={() => {\n                dispatch(clearMappings());\n              }}\n              className={styles.mappings_clear__btn}\n            >\n              (Clear)\n            </span>\n          </h4>\n        </div>\n      </div>\n\n      <div className=\"bx--row\">\n        <div className=\"bx--col\">\n          <MappingsFilterBar />\n        </div>\n      </div>\n      <div className=\"bx--row\">\n        <div\n          className={`bx--col ${styles.full_height__col} ${styles.mapping__col}`}\n        >\n          <ul>\n            {Object.keys(\n              filterMappingFieldsForValue(mapping, fieldMappingFilter)\n            ).map((o) => (\n              <MappingItem key={o} title={o} />\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Mapping;\n","import React, { useState } from \"react\";\nimport { Button, TextInput } from \"carbon-components-react\";\nimport { Save16 } from \"@carbon/icons-react\";\nimport { saveAs } from \"file-saver\";\nimport styles from \"./export.module.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Export = (props) => {\n  const [exportFilename, setExportFilename] = useState(\"\");\n  const mapping = props.mapping;\n\n  function saveJsonToDisk(filename, obj) {\n    const blob = new Blob([JSON.stringify(obj, null, 2)], {\n      type: \"application/json\",\n    });\n    saveAs(blob, filename);\n  }\n\n  return (\n    <>\n      <div className=\"bx--row\">\n        <div className=\"bx--col\">\n          <h4 className=\"section-title\">Save Configuration</h4>\n        </div>\n      </div>\n\n      <div className=\"bx--row\" style={{ marginBottom: \".75rem\" }}>\n        <div className={`bx--col ${styles.export__col}`}>\n          <div className=\"bx--row\">\n            <div className=\"bx--col\">\n              <TextInput\n                autoComplete={\"off\"}\n                id={\"export-filename\"}\n                labelText={\"Filename\"}\n                value={exportFilename}\n                onChange={(input) => {\n                  setExportFilename(input.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"bx--row\">\n            <div className=\"bx--col\" style={{ textAlign: \"right\" }}>\n              <Button\n                disabled={exportFilename.length === 0}\n                renderIcon={Save16}\n                onClick={() => {\n                  saveJsonToDisk(\n                    `${exportFilename}.json`,\n                    props.stateMappingToShifterMapping(mapping)\n                  );\n                }}\n              >\n                Save\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nExport.propTypes = {\n  mapping: PropTypes.object,\n  stateMappingToShifterMapping: PropTypes.func,\n};\n\nexport default Export;\n","import React from \"react\";\nimport { FileUploader } from \"carbon-components-react\";\nimport styles from \"./import.module.scss\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst Import = (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className=\"bx--row\">\n        <div className=\"bx--col\">\n          <h4 className=\"section-title\">Load Configuration</h4>\n        </div>\n      </div>\n\n      <div className=\"bx--row\" style={{ marginBottom: \".75rem\" }}>\n        <div className={`bx--col ${styles.import__col}`}>\n          <div className=\"bx--row\">\n            <div className=\"bx--col\">\n              <FileUploader\n                accept={[\".json\"]}\n                buttonKind=\"primary\"\n                buttonLabel=\"Load file\"\n                filenameStatus=\"edit\"\n                multiple={false}\n                onDelete={() => {\n                  dispatch(props.clearMappings());\n                }}\n                onChange={(event) => {\n                  let reader = new FileReader();\n                  reader.onload = (_event) => {\n                    let input = null;\n                    if (\n                      _event &&\n                      \"target\" in _event &&\n                      \"result\" in _event.target\n                    ) {\n                      input = JSON.parse(_event.target.result);\n                      const mappings = props.loadJsonFromDisk(input);\n                      dispatch(props.updateMappingsFromFile(mappings));\n                    }\n                  };\n                  reader.readAsText(event.target.files[0]);\n                }}\n                iconDescription=\"Clear file\"\n                labelDescription=\"Select configuration .json file\"\n                labelTitle=\"\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nImport.propTypes = {\n  loadJsonFromDisk: PropTypes.func,\n  updateMappingsFromFile: PropTypes.func,\n  clearMappings: PropTypes.func,\n};\n\nexport default Import;\n","import React from \"react\";\nimport styles from \"./from_stix.module.scss\";\n\nconst StatisticObject = ({\n  officialObjectsCount,\n  requiredObjectsCount,\n  officialFieldsCount,\n  requiredFieldsCount,\n}) => {\n  const objectsStatistics = (officialObjectsCount / officialFieldsCount) * 100;\n\n  return (\n    <div className=\"bx--col\">\n      <div className=\"bx--label-description\">Official STIX Coverage</div>\n      <div className={styles.coverage_percent}>\n        {officialObjectsCount === 0\n          ? 0\n          : Math.round(objectsStatistics * 100) / 100}\n        %\n      </div>\n      <div className={styles.coverage_count}>\n        {officialObjectsCount} of {officialFieldsCount} STIX fields\n      </div>\n      <div className={styles.coverage_count}>\n        {requiredObjectsCount} of {requiredFieldsCount} required STIX fields\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticObject;\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./from_stix.module.scss\";\nimport StatisticObject from \"./StatisticObject\";\nimport { getNumOfFields } from \"./utils\";\n\nconst Statistics = ({ officialObjectsCount, requiredObjectsCount }) => {\n  const stixFields = useSelector((state) => state.stix.stixFields);\n  const [officialFieldsCount, requiredFieldsCount] = useMemo(\n    () => getNumOfFields(stixFields),\n    [stixFields]\n  );\n\n  return (\n    <>\n      <div className=\"bx--row\">\n        <div className={\"bx--col\"}>\n          <h4 className=\"section-title\">Coverage Statistics</h4>\n        </div>\n      </div>\n\n      <div className=\"bx--row\" style={{ marginBottom: \".75rem\" }}>\n        <div className={`bx--col ${styles.statistics__col}`}>\n          <div className=\"bx--row\">\n            <StatisticObject\n              officialObjectsCount={officialObjectsCount}\n              requiredObjectsCount={requiredObjectsCount}\n              officialFieldsCount={officialFieldsCount}\n              requiredFieldsCount={requiredFieldsCount}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Statistics;\n","const requiredSetV2_0 = new Set([\n  \"autonomous-system:number\",\n  \"directory:path\",\n  \"domain-name:value\",\n  \"email-addr:value\",\n  \"email-message:is_multipart\",\n  \"ipv4-addr:value\",\n  \"ipv6-addr:value\",\n  \"mac-addr:value\",\n  \"software:name\",\n  \"url:value\",\n  \"user-account:user_id\",\n  \"windows-registry-key:key\",\n]);\n\nconst requiredSetV2_1 = new Set([\n  \"autonomous-system:number\",\n  \"directory:path\",\n  \"domain-name:value\",\n  \"email-addr:value\",\n  \"email-message:is_multipart\",\n  \"ipv4-addr:value\",\n  \"ipv6-addr:value\",\n  \"mac-addr:value\",\n  \"mutex:name\",\n  \"network-traffic:protocols\",\n  \"software:name\",\n  \"url:value\",\n  \"user-account:user_id\",\n]);\n\nexport const requiredFields = {\n  stix_version_2_0: requiredSetV2_0,\n  stix_version_2_1: requiredSetV2_1,\n};\n","import FromSTIX from \"./FromSTIX\";\nexport default FromSTIX;\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AddFields from \"./AddFields\";\nimport Mapping from \"./Mapping\";\nimport Export from \"../Export/Export\";\nimport Import from \"../Import/Import\";\nimport { stateMappingToShifterMapping, loadJsonFromDisk } from \"./utils\";\nimport {\n  updateMappingsFromFile,\n  clearMappings,\n} from \"../../store/actions/from_stix\";\nimport Statistics from \"./Statistics\";\nimport { getObjectsData } from \"./utils\";\nimport { requiredFields } from \"../../global/requiredFields\";\n\nconst FromSTIX = () => {\n  const mapping = useSelector((state) => state.fromStix.mapping);\n  const stixVersion = useSelector((state) => state.stix.stixVersion);\n  const stixFields = useSelector((state) => state.stix.stixFields);\n  const requiredSet = requiredFields[stixVersion];\n  const stixFieldsObject = useMemo(\n    () =>\n      Object.assign(\n        ...Array.from(stixFields, (field) => ({\n          [field.type]: field.items.map((item) => item.name),\n        }))\n      ),\n    [stixFields]\n  );\n  const [coverage, officialObjectsCount, requiredObjectsCount] = getObjectsData(\n    mapping,\n    stixFieldsObject,\n    requiredSet\n  );\n  return (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col\">\n          <h1 className=\"page-title\">From STIX</h1>\n        </div>\n      </div>\n\n      <div className=\"bx--row\">\n        <div className=\"bx--col-sm-1\">\n          <AddFields objects={coverage} />\n        </div>\n\n        <div className=\"bx--col-sm-2\">\n          <Mapping />\n        </div>\n\n        <div className=\"bx--col-sm-1\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-sm-4\">\n              <Export\n                mapping={mapping}\n                stateMappingToShifterMapping={stateMappingToShifterMapping}\n              />\n            </div>\n          </div>\n\n          <div className=\"bx--row\">\n            <div className=\"bx--col-sm-4\">\n              <Import\n                loadJsonFromDisk={loadJsonFromDisk}\n                updateMappingsFromFile={updateMappingsFromFile}\n                clearMappings={clearMappings}\n              />\n            </div>\n          </div>\n\n          <div className=\"bx--row\">\n            <div className=\"bx--col-sm-4\">\n              <Statistics\n                officialObjectsCount={officialObjectsCount}\n                requiredObjectsCount={requiredObjectsCount}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FromSTIX;\n","const transformers = [\n  \"None\",\n  \"StringToBool\",\n  \"EpochToTimestamp\",\n  \"FormatMac\",\n  \"FormatTCPProtocol\",\n  \"EpochSecondsToTimestamp\",\n  \"TimestampToMilliseconds\",\n  \"ToInteger\",\n  \"ToString\",\n  \"ToLowercaseArray\",\n  \"ToBase64\",\n  \"ToFilePath\",\n  \"ToDirectoryPath\",\n  \"ToFileName\",\n  \"ToDomainName\",\n  \"ToIPv4\",\n  \"DateTimeToUnixTimestamp\",\n  \"NaiveToUTC\",\n  \"TimestampToUTC\",\n  \"SetToOne\",\n  \"FilterIPv4List\",\n  \"FilterIPv6List\",\n  \"ValueToList\",\n  \"GraphIDToPID\",\n];\n\nexport default transformers;\n","import React, { useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MultiSelect } from \"carbon-components-react\";\nimport { updateStixField } from \"../../store/actions/to_stix\";\n\nconst ReferencesSelector = ({\n  selectedReferences,\n  objectKey,\n  sourceFieldId,\n  stixFieldId,\n}) => {\n  const dispatch = useDispatch();\n  const mapping = useSelector((state) => state.toStix.mapping);\n  const allAvailableObjectKeys = useMemo(() => {\n    return [...Object.keys(mapping)].filter((o) => o !== objectKey);\n  }, [objectKey, mapping]);\n\n  return (\n    <div className={\"bx--col-md-2\"}>\n      <MultiSelect\n        id={\"references\"}\n        size={\"sm\"}\n        useTitleInItem={false}\n        label={\n          selectedReferences?.length !== 0\n            ? selectedReferences.map((referenceObjectName) =>\n                referenceObjectName !==\n                selectedReferences[selectedReferences.length - 1]\n                  ? referenceObjectName + \", \"\n                  : referenceObjectName\n              )\n            : \"None\"\n        }\n        invalid={false}\n        invalidText=\"Invalid Selection\"\n        onChange={(e) => {\n          dispatch(\n            updateStixField(\n              objectKey,\n              sourceFieldId,\n              stixFieldId,\n              e.selectedItems,\n              \"references\"\n            )\n          );\n        }}\n        items={allAvailableObjectKeys}\n        disabled={allAvailableObjectKeys.length === 0}\n        initialSelectedItems={selectedReferences}\n        selectedItem={selectedReferences}\n        itemToString={(item) => (item ? item : \"\")}\n        inline={true}\n      />\n    </div>\n  );\n};\n\nexport default ReferencesSelector;\n","import React from \"react\";\nimport styles from \"./to_stix.module.scss\";\nimport {\n  openSelectFieldModal,\n  removeStixField,\n  updateStixField,\n} from \"../../store/actions/to_stix\";\nimport { Dropdown, TextInput } from \"carbon-components-react\";\nimport { useDispatch } from \"react-redux\";\nimport transformers from \"../../global/transformers\";\nimport { Delete20, List20 } from \"@carbon/icons-react\";\nimport ReferencesSelector from \"./ReferencesSelector\";\n\nconst StixField = ({\n  objectKey,\n  sourceFieldId,\n  stixFieldId,\n  stixFieldKey,\n  stixFieldTransformer,\n  stixFieldReferences,\n}) => {\n  const dispatch = useDispatch();\n  return (\n    <div key={stixFieldId}>\n      <div className={`bx--row ${styles.object_item__field}`}>\n        <div className={\"bx--col-md-3\"}>\n          <div className={\"bx--row\"}>\n            <div className={\"bx--col\"}>\n              <TextInput\n                id={stixFieldId}\n                labelText={\"\"}\n                onChange={(e) => {\n                  dispatch(\n                    updateStixField(\n                      objectKey,\n                      sourceFieldId,\n                      stixFieldId,\n                      e.target.value,\n                      \"key\"\n                    )\n                  );\n                }}\n                size={\"sm\"}\n                value={stixFieldKey}\n              />\n            </div>\n            <div>\n              <List20\n                onClick={() => {\n                  dispatch(\n                    openSelectFieldModal(objectKey, sourceFieldId, stixFieldId)\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={\"bx--col-md-2\"}>\n          <Dropdown\n            size={\"sm\"}\n            ariaLabel=\"Dropdown\"\n            id=\"transformer\"\n            items={transformers}\n            label=\"None\"\n            selectedItem={stixFieldTransformer}\n            onChange={(e) => {\n              dispatch(\n                updateStixField(\n                  objectKey,\n                  sourceFieldId,\n                  stixFieldId,\n                  e.selectedItem,\n                  \"transformer\"\n                )\n              );\n            }}\n          />\n        </div>\n\n        <ReferencesSelector\n          objectKey={objectKey}\n          sourceFieldId={sourceFieldId}\n          stixFieldId={stixFieldId}\n          selectedReferences={stixFieldReferences}\n        />\n\n        <div>\n          <Delete20\n            className={`${styles.object_item__btn}`}\n            onClick={() => {\n              dispatch(removeStixField(objectKey, sourceFieldId, stixFieldId));\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(StixField);\n","import React from \"react\";\nimport { Add20 } from \"@carbon/icons-react\";\nimport { addStixField } from \"../../store/actions/to_stix\";\nimport { useDispatch } from \"react-redux\";\nimport StixField from \"./StixField\";\nimport styles from \"./to_stix.module.scss\";\n\nconst StixFieldsTableHeader = ({ objectKey, sourceFieldId }) => {\n  const dispatch = useDispatch();\n  return (\n    <div className={`bx--row ${styles.object_item_field__header}`}>\n      <div className={\"bx--col-md-3\"}>STIX field</div>\n      <div className={\"bx--col-md-2\"}>Transformer</div>\n      <div className={\"bx--col-md-2\"}>References</div>\n      <div className={\"bx--col-md-1\"} style={{ textAlign: \"right\" }}>\n        <Add20\n          className={`${styles.object_item__btn}`}\n          onClick={() => {\n            dispatch(addStixField(objectKey, sourceFieldId, \"\"));\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst StixFieldsTableBody = ({ objectKey, sourceFieldId, stixFieldsData }) => {\n  return stixFieldsData.map((stixField) => {\n    const stixFieldTransformer = stixField?.transformer;\n    const stixFieldReferences =\n      stixField.references && stixField.references.length !== 0\n        ? !typeof stixField.references === Array\n          ? stixField.references\n          : [stixField.references]\n        : [];\n    return (\n      <StixField\n        key={stixField.id}\n        sourceFieldId={sourceFieldId}\n        objectKey={objectKey}\n        stixFieldId={stixField.id}\n        stixFieldKey={stixField.key}\n        stixFieldTransformer={stixFieldTransformer}\n        stixFieldReferences={stixFieldReferences}\n      />\n    );\n  });\n};\n\nconst StixFieldsTable = ({ objectKey, sourceFieldId, sourceFieldData }) => {\n  return (\n    <div className={`bx--row ${styles.object_item__field}`}>\n      <div className={\"bx--col-sm-4\"}>\n        <StixFieldsTableHeader\n          objectKey={objectKey}\n          sourceFieldId={sourceFieldId}\n        />\n        <StixFieldsTableBody\n          objectKey={objectKey}\n          sourceFieldId={sourceFieldId}\n          stixFieldsData={sourceFieldData.mapped_to}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default StixFieldsTable;\n","import React from \"react\";\nimport {\n  removeDataSourceField,\n  updateDataSourceField,\n} from \"../../store/actions/to_stix\";\nimport { SubtractAlt20 } from \"@carbon/icons-react\";\nimport { useDispatch } from \"react-redux\";\nimport { TextInput } from \"carbon-components-react\";\nimport styles from \"./to_stix.module.scss\";\nimport StixFieldsTable from \"./StixFieldsTable\";\n\nconst SourceFieldHeader = ({ fieldId, objectKey, fieldData }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={\"bx--row\"}>\n      <div>\n        <SubtractAlt20\n          style={{ marginLeft: \"1rem\", border: 0 }}\n          className={`${styles.object_item__btn}`}\n          onClick={() => {\n            dispatch(removeDataSourceField(objectKey, fieldId));\n          }}\n        />\n      </div>\n      <div className={`bx--col`}>\n        <TextInput\n          labelText={\"Source field name\"}\n          id={fieldId}\n          onChange={(e) => {\n            dispatch(updateDataSourceField(objectKey, fieldId, e.target.value));\n          }}\n          value={fieldData.field}\n          size={\"sm\"}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst SourceField = ({ objectKey, fieldId, fieldData }) => {\n  return (\n    <div key={fieldId} className={styles.object_item__map}>\n      <SourceFieldHeader\n        objectKey={objectKey}\n        fieldId={fieldId}\n        fieldData={fieldData}\n      />\n      <StixFieldsTable\n        objectKey={objectKey}\n        sourceFieldId={fieldId}\n        sourceFieldData={fieldData}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(SourceField);\n","import React, { useState } from \"react\";\nimport {\n  Add20,\n  Close20,\n  ChevronUp32,\n  ChevronDown32,\n} from \"@carbon/icons-react\";\nimport { addDataSourceField, removeObject } from \"../../store/actions/to_stix\";\nimport { useDispatch } from \"react-redux\";\nimport SourceField from \"./SourceField\";\nimport styles from \"./to_stix.module.scss\";\n\nconst ObjectHeader = ({ title, isOpen, setIsOpen }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div\n      className={`bx--row`}\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        setIsOpen(!isOpen);\n      }}\n    >\n      <span style={{ marginLeft: \"1rem\" }}>\n        {isOpen ? <ChevronDown32 /> : <ChevronUp32 />}\n      </span>\n      <div className={`bx--col ${styles.object_item__title}`}>{title}</div>\n\n      <div className={`bx--col`} style={{ textAlign: \"right\" }}>\n        <Add20\n          className={`${styles.object_item__btn}`}\n          style={{\n            marginRight: \".5rem\",\n          }}\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            dispatch(addDataSourceField(title, \"\"));\n          }}\n        />\n        <Close20\n          className={`${styles.object_item__btn}`}\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            dispatch(removeObject(title));\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst ObjectBody = ({ sourceFields, objectKey }) => {\n  const isEmptyObject = Object.keys(sourceFields).length === 0;\n\n  if (isEmptyObject) {\n    return (\n      <div className={`bx--row`}>\n        <div className={`bx--col`}>\n          There are currently no data-source fields mapped. Click the \"+\" button\n          to add your first data-source field.\n        </div>\n      </div>\n    );\n  }\n\n  return Object.keys(sourceFields).map((fieldId) => {\n    return (\n      <SourceField\n        key={fieldId}\n        objectKey={objectKey}\n        fieldId={fieldId}\n        fieldData={sourceFields[fieldId]}\n      />\n    );\n  });\n};\n\nconst MappingObject = ({ objectKey, objectData }) => {\n  const [isOpen, setIsOpen] = useState(true);\n  return (\n    <div className={`bx--row ${styles.object__item_box}`}>\n      <div className={`bx--col ${styles.object__item_content}`}>\n        <ObjectHeader title={objectKey} isOpen={isOpen} setIsOpen={setIsOpen} />\n        {isOpen && (\n          <ObjectBody objectKey={objectKey} sourceFields={objectData} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(MappingObject);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport MappingObject from \"./MappingObject\";\n\nconst MappingObjects = () => {\n  const mapping = useSelector((state) => state.toStix.mapping);\n  const isMappingEmpty = Object.keys(mapping).length === 0;\n\n  if (isMappingEmpty) {\n    return (\n      <div className=\"bx--row\">\n        <div className={`bx--col`}>\n          <p style={{ paddingTop: \"1rem\" }}>\n            There are currently no objects to show. Click the “New object”\n            button to start mapping or load configuration.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return Object.keys(mapping).map((o) => {\n    return <MappingObject key={o} objectKey={o} objectData={mapping[o]} />;\n  });\n};\n\nexport default MappingObjects;\n","import React from \"react\";\nimport { Modal } from \"carbon-components-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closeSelectFieldModal } from \"../../store/actions/to_stix\";\nimport SelectField from \"../STIX/SelectField\";\n\nconst SelectFieldModal = () => {\n  const dispatch = useDispatch();\n  const selectFieldModal = useSelector(\n    (state) => state.toStix.selectFieldModal\n  );\n  const isOpen = !(selectFieldModal === null);\n\n  return (\n    <Modal\n      shouldSubmitOnEnter={true}\n      open={isOpen}\n      onRequestClose={() => {\n        dispatch(closeSelectFieldModal());\n      }}\n      modalHeading={\"Select field\"}\n      hasForm={false}\n      passiveModal={true}\n    >\n      {isOpen && (\n        <SelectField\n          objectName={selectFieldModal.objectKey}\n          fieldId={selectFieldModal.sourceFieldId}\n          stixFieldId={selectFieldModal.stixFieldId}\n          type={\"key\"}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default SelectFieldModal;\n","import React from \"react\";\nimport { Add32 } from \"@carbon/icons-react\";\nimport { Button } from \"carbon-components-react\";\nimport { useDispatch } from \"react-redux\";\nimport { openNewObjectModal } from \"../../store/actions/to_stix\";\nimport MappingObjects from \"./MappingObjects\";\nimport SelectFieldModal from \"./SelectFieldModal\";\n\nconst Mapping = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <SelectFieldModal />\n      <div className=\"bx--row\">\n        <div className=\"bx--col\" style={{ textAlign: \"right\" }}>\n          <Button\n            renderIcon={Add32}\n            onClick={() => {\n              dispatch(openNewObjectModal());\n            }}\n          >\n            New Object\n          </Button>\n        </div>\n      </div>\n\n      <MappingObjects />\n    </>\n  );\n};\n\nexport default Mapping;\n","import React, { useState } from \"react\";\nimport { Modal, TextInput } from \"carbon-components-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewObject, closeNewObjectModal } from \"../../store/actions/to_stix\";\n\nconst NewObjectModal = () => {\n  const dispatch = useDispatch();\n  const isOpen = useSelector((state) => state.toStix.isNewObjectModalOpen);\n  const [objectName, setObjectName] = useState(\"\");\n\n  return (\n    <Modal\n      shouldSubmitOnEnter={true}\n      open={isOpen}\n      onRequestClose={() => {\n        setObjectName(\"\");\n        dispatch(closeNewObjectModal());\n      }}\n      onRequestSubmit={() => {\n        if (objectName !== \"\") {\n          dispatch(addNewObject(objectName));\n          setObjectName(\"\");\n        }\n        dispatch(closeNewObjectModal());\n      }}\n      primaryButtonText={\"Create\"}\n      secondaryButtonText={\"Cancel\"}\n      modalHeading={\"Create new object\"}\n      hasForm={true}\n      primaryButtonDisabled={objectName === \"\"}\n    >\n      <TextInput\n        id={\"new-object-name\"}\n        labelText={\"Object name\"}\n        onChange={(e) => {\n          setObjectName(e.target.value);\n        }}\n        value={objectName}\n        helperText={\n          \"Should be lowercase, use dash for spacing, e.g. `foo_bar` \"\n        }\n      />\n    </Modal>\n  );\n};\n\nexport default NewObjectModal;\n","import { v4 as uuidv4 } from \"uuid\";\n\nexport function loadJsonFromDisk(obj) {\n  return shifterMappingToStateMapping(obj, {}, \"\");\n}\n\nfunction getDataSourceFieldId(\n  stateMapping,\n  objectName,\n  dataSourceField,\n  dataSourceFieldId\n) {\n  let ids = [];\n  if (objectName in stateMapping) {\n    ids = Object.keys(stateMapping[objectName]).filter((id) => {\n      return dataSourceField === stateMapping[objectName][id].field;\n    });\n  }\n  return ids.length !== 0 ? ids[0] : dataSourceFieldId;\n}\n\nfunction shifterMappingToStateMapping(shifterMapping, stateMapping, fieldName) {\n  if (!shifterMapping) return stateMapping;\n  Object.keys(shifterMapping).forEach((dataSourceField) => {\n    if (typeof Object.keys(shifterMapping[dataSourceField]) === Array) {\n      shifterMappingToStateMapping(\n        shifterMapping[dataSourceField],\n        stateMapping,\n        dataSourceField\n      );\n    } else if (\n      new Set(Object.keys(shifterMapping[dataSourceField])).has(\"key\")\n    ) {\n      if (new Set(Object.keys(shifterMapping[dataSourceField])).has(\"object\")) {\n        const objectName = shifterMapping[dataSourceField].object;\n        const dataSourceFieldId = uuidv4();\n        const mapped_to_id = uuidv4();\n        let id = getDataSourceFieldId(\n          stateMapping,\n          objectName,\n          dataSourceField,\n          dataSourceFieldId\n        );\n\n        const references = shifterMapping[dataSourceField]?.references;\n        const transformer = shifterMapping[dataSourceField]?.transformer;\n\n        const mappedTo = {\n          id: mapped_to_id,\n          key: shifterMapping[dataSourceField].key.replace(\".\", \":\"),\n          ...(transformer ? { transformer: transformer } : {}),\n          ...(references ? { references: references } : {}),\n        };\n\n        stateMapping[objectName] = {\n          ...stateMapping[objectName],\n        };\n        stateMapping[objectName][id] = {\n          ...stateMapping[objectName][id],\n          ...(id === dataSourceFieldId\n            ? { field: fieldName ? fieldName : dataSourceField }\n            : {}),\n          mapped_to: [\n            id !== dataSourceFieldId\n              ? { ...stateMapping[objectName][id].mapped_to, ...mappedTo }\n              : mappedTo,\n          ],\n        };\n      } else {\n        console.log(\"TODO - metadata\");\n      }\n    } else {\n      const newFieldName = fieldName\n        ? `${fieldName}.${dataSourceField}`\n        : dataSourceField;\n      shifterMappingToStateMapping(\n        shifterMapping[dataSourceField],\n        stateMapping,\n        newFieldName\n      );\n    }\n  });\n  return stateMapping;\n}\n\nexport function stateMappingToShifterMapping(stateMapping) {\n  let output = {};\n  Object.keys(stateMapping).forEach((object) => {\n    Object.keys(stateMapping[object]).forEach((field) => {\n      const _field = stateMapping[object][field].field;\n      const mappedTo = stateMapping[object][field].mapped_to;\n      Object.keys(mappedTo).forEach((index) => {\n        const key = mappedTo[index].key.replace(\":\", \".\");\n        const transformer =\n          mappedTo[index].transformer && mappedTo[index].transformer !== \"None\"\n            ? mappedTo[index].transformer\n            : null;\n        let references = mappedTo[index].references\n          ? mappedTo[index].references\n          : null;\n        if (!(_field in output)) {\n          output[_field] = [];\n        }\n        if (!(key in output[_field])) {\n          output = {\n            ...output,\n            [_field]: [\n              ...output[_field],\n              {\n                key: key,\n                object: object,\n                ...(transformer ? { transformer: transformer } : {}),\n                ...(references ? { references: references } : {}),\n              },\n            ],\n          };\n        }\n      });\n    });\n  });\n  return output;\n}\n\nexport function getDataForStatistics(mapping, stixTypesSet) {\n  const officialFields = new Set();\n  const CustomFields = new Set();\n  const officialObjects = new Set();\n  const CustomObjects = new Set();\n  Object.keys(mapping).forEach((object) => {\n    Object.keys(mapping[object]).forEach((id) => {\n      Object.keys(mapping[object][id].mapped_to).forEach((index) => {\n        const [type, key] = mapping[object][id].mapped_to[index].key.split(\":\");\n        if (stixTypesSet.has(type)) {\n          officialFields.add(`${type}:${key}`);\n          officialObjects.add(object);\n        } else if (type.startsWith(\"x-\")) {\n          CustomFields.add(`${type}:${key}`);\n          CustomObjects.add(object);\n        }\n      });\n    });\n  });\n  return [\n    officialFields.size,\n    CustomFields.size,\n    officialObjects.size,\n    CustomObjects.size,\n  ];\n}\n","import React from \"react\";\nimport styles from \"./to_stix.module.scss\";\n\nconst StatisticObject = ({ fieldsCount, objectsCount, sum, type }) => {\n  const objectsStatistics = (fieldsCount / sum) * 100;\n\n  return (\n    <div className=\"bx--col\">\n      <div className=\"bx--label-description\">{type} STIX fields</div>\n      <div className={styles.coverage_percent}>\n        {sum === 0 ? 0 : Math.round(objectsStatistics * 100) / 100}%\n      </div>\n      <div className={styles.coverage_count}>{fieldsCount} STIX fields</div>\n      <div className={styles.coverage_count}>{objectsCount} STIX objects</div>\n    </div>\n  );\n};\n\nexport default StatisticObject;\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./to_stix.module.scss\";\nimport { getDataForStatistics } from \"./utils\";\nimport StatisticObject from \"./StatisticObject\";\n\nconst Statistics = ({ mapping }) => {\n  const stixFields = useSelector((state) => state.stix.stixFields);\n  const stixTypesSet = useMemo(\n    () => new Set(Object.values(stixFields).map((field) => field.type)),\n    [stixFields]\n  );\n  const [\n    officialFieldsCount,\n    customFieldsCount,\n    officialObjectsCount,\n    customObjectsCount,\n  ] = getDataForStatistics(mapping, stixTypesSet);\n\n  const sum = officialFieldsCount + customFieldsCount;\n\n  return (\n    <>\n      <div className=\"bx--row\">\n        <div className={\"bx--col\"}>\n          <h4 className=\"section-title\">Official VS Custom STIX fields</h4>\n        </div>\n      </div>\n\n      <div className=\"bx--row\" style={{ marginBottom: \".75rem\" }}>\n        <div className={`bx--col ${styles.statistics__col}`}>\n          <div className=\"bx--row\">\n            <StatisticObject\n              fieldsCount={officialFieldsCount}\n              objectsCount={officialObjectsCount}\n              sum={sum}\n              type={\"Official\"}\n            />\n          </div>\n        </div>\n        <div className={`bx--col ${styles.statistics__col}`}>\n          <div className=\"bx--row\">\n            <StatisticObject\n              fieldsCount={customFieldsCount}\n              objectsCount={customObjectsCount}\n              sum={sum}\n              type={\"Custom\"}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Statistics;\n","import ToSTIX from \"./ToSTIX\";\nexport default ToSTIX;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Mapping from \"./Mapping\";\nimport Export from \"../Export/Export\";\nimport Import from \"../Import/Import\";\nimport NewObjectModal from \"./NewObjectModal\";\nimport { stateMappingToShifterMapping, loadJsonFromDisk } from \"./utils\";\nimport {\n  updateMappingsFromFile,\n  clearMappings,\n} from \"../../store/actions/to_stix\";\nimport Statistics from \"./Statistics\";\n\nconst ToSTIX = () => {\n  const mapping = useSelector((state) => state.toStix.mapping);\n\n  return (\n    <>\n      <NewObjectModal />\n      <div className=\"bx--grid\">\n        <div className=\"bx--row\">\n          <div className=\"bx--col\">\n            <h1 className=\"page-title\">To STIX</h1>\n          </div>\n        </div>\n\n        <div className=\"bx--row\">\n          <div className=\"bx--col-sm-3\">\n            <Mapping />\n          </div>\n\n          <div className=\"bx--col-sm-1\">\n            <div className=\"bx--row\">\n              <div className=\"bx--col-sm-4\">\n                <Export\n                  mapping={mapping}\n                  stateMappingToShifterMapping={stateMappingToShifterMapping}\n                />\n              </div>\n            </div>\n\n            <div className=\"bx--row\">\n              <div className=\"bx--col-sm-4\">\n                <Import\n                  loadJsonFromDisk={loadJsonFromDisk}\n                  updateMappingsFromFile={updateMappingsFromFile}\n                  clearMappings={clearMappings}\n                />\n              </div>\n            </div>\n\n            <div className=\"bx--row\">\n              <div className=\"bx--col-sm-4\">\n                <Statistics mapping={mapping} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ToSTIX;\n","import About from \"./About\";\nexport default About;\n","import React from \"react\";\nimport {\n  Accordion,\n  AccordionItem,\n  UnorderedList,\n  ListItem,\n} from \"carbon-components-react\";\nimport \"./About.scss\";\n\nconst About = () => {\n  return (\n    <>\n      <div className={\"bx--row\"}>\n        <div className={\"bx--col\"}>\n          <img\n            src=\"https://user-images.githubusercontent.com/16198896/129204519-78bb6448-246e-4e6d-a456-182792c7b894.png\"\n            alt=\"logo\"\n          />\n          <h4>STIX-Shifter Connector's Mapping Builder</h4>\n        </div>\n      </div>\n\n      <div className={\"bx--row\"}>\n        <div className={\"bx--col\"}>\n          <Accordion align=\"start\">\n            <AccordionItem title=\"Introduction\" open>\n              <p>\n                The map-my-shifter (MMS) project provides a visual way for\n                building mapping files for{\" \"}\n                <a\n                  href={\n                    \"https://github.com/opencybersecurityalliance/stix-shifter\"\n                  }\n                >\n                  STIX-Shifter\n                </a>{\" \"}\n                project.\n              </p>\n\n              <UnorderedList>\n                <ListItem>\n                  From STIX pattern mapping - When building the data source\n                  query from STIX query, the STIX fields, for examples\n                  `file:name`, is mapped to the target data source's field.\n                  <a\n                    href={\n                      \"https://github.com/opencybersecurityalliance/stix-shifter/blob/master/adapter-guide/develop-translation-module.md#step-2-edit-the-from_stix_map-json-files\"\n                    }\n                  >\n                    Read more...\n                  </a>\n                </ListItem>\n                <ListItem>\n                  To STIX object mapping - When results object is back from the\n                  data source, this object should be displayed in the final\n                  results as STIX object. For examples {\"{\"}\"filename\": \"xxxxx\"}\n                  should be translated to STIX object of type `file`.\n                  <a\n                    href={\n                      \"https://github.com/opencybersecurityalliance/stix-shifter/blob/master/adapter-guide/develop-translation-module.md#step-4-edit-the-to_stix_map-json-file\"\n                    }\n                  >\n                    Read more...\n                  </a>\n                </ListItem>\n              </UnorderedList>\n            </AccordionItem>\n\n            <AccordionItem title=\"Use-cases\" open>\n              <UnorderedList>\n                <ListItem>Create mapping file from scratch.</ListItem>\n                <ListItem>\n                  Load existing mapping file, edit the file and save it to a new\n                  file\n                </ListItem>\n              </UnorderedList>\n            </AccordionItem>\n\n            <AccordionItem title=\"Authors\" open>\n              <UnorderedList>\n                <ListItem>\n                  <a href={\"https://github.com/barvhaim\"}>Bar Haim</a>\n                </ListItem>\n                <ListItem>\n                  <a href={\"https://github.com/idohersko\"}>Ido Hersko</a>\n                </ListItem>\n                <ListItem>\n                  <a href={\"https://github.com/noaakl\"}>Noaa Kless</a>\n                </ListItem>\n              </UnorderedList>\n            </AccordionItem>\n\n            <AccordionItem title=\"Licensing\" open>\n              <p>\n                map-my-shifter is licensed under the Apache License, Version\n                2.0. See{\" \"}\n                <a\n                  href={\n                    \"https://github.com/barvhaim/map-my-shifter/blob/master/LICENSE\"\n                  }\n                >\n                  LICENSE\n                </a>{\" \"}\n                for the full license text.\n              </p>\n            </AccordionItem>\n          </Accordion>\n        </div>\n      </div>\n\n      <div className={\"bx--row\"}>\n        <div className={\"bx--col footer\"}>\n          <p>\n            Built with <span className=\"heart\">❤</span> from{\" \"}\n            <a href={\"https://www.research.ibm.com/haifa/ccoe/\"}>\n              IBM Cyber Security Center of Excellence (CCoE)\n            </a>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default About;\n","const stixLanguageV2 = [\n  {\n    title: \"Artifact\",\n    type: \"artifact\",\n    items: [\n      { name: \"mime_type\", required: false },\n      { name: \"payload_bin\", required: false },\n      { name: \"url\", required: false },\n      { name: \"hashes.SHA-256\", required: false },\n      { name: \"hashes.MD5\", required: false },\n      { name: \"hashes.SHA-1\", required: false },\n    ],\n  },\n  {\n    title: \"AS\",\n    type: \"autonomous-system\",\n    items: [\n      { name: \"number\", required: true },\n      { name: \"name\", required: false },\n      { name: \"rir\", required: false },\n    ],\n  },\n  {\n    title: \"Directory\",\n    type: \"directory\",\n    items: [\n      { name: \"path\", required: true },\n      { name: \"path_enc\", required: false },\n      { name: \"created\", required: false },\n      { name: \"modified\", required: false },\n      { name: \"accessed\", required: false },\n    ],\n  },\n  {\n    title: \"Domain Name\",\n    type: \"domain-name\",\n    items: [{ name: \"value\", required: true }],\n  },\n  {\n    title: \"Email Address\",\n    type: \"email-addr\",\n    items: [\n      { name: \"value\", required: true },\n      { name: \"display_name\", required: false },\n    ],\n  },\n  {\n    title: \"Email Message\",\n    type: \"email-message\",\n    items: [\n      { name: \"is_multipart\", required: true },\n      { name: \"date\", required: false },\n      { name: \"content_type\", required: false },\n      { name: \"subject\", required: false },\n      { name: \"body\", required: false },\n    ],\n  },\n  {\n    title: \"File\",\n    type: \"file\",\n    items: [\n      { name: \"hashes.SHA-256\", required: false },\n      { name: \"hashes.MD5\", required: false },\n      { name: \"hashes.SHA-1\", required: false },\n      { name: \"size\", required: false },\n      { name: \"name\", required: false },\n      { name: \"name_enc\", required: false },\n      { name: \"magic_number_hex\", required: false },\n      { name: \"mime_type\", required: false },\n      { name: \"created\", required: false },\n      { name: \"modified\", required: false },\n      { name: \"accessed\", required: false },\n      // { name: \"parent_directory_ref\", required: false },\n      { name: \"is_encrypted\", required: false },\n    ],\n  },\n  {\n    title: \"IPv4 Address\",\n    type: \"ipv4-addr\",\n    items: [{ name: \"value\", required: true }],\n  },\n  {\n    title: \"IPv6 Address\",\n    type: \"ipv6-addr\",\n    items: [{ name: \"value\", required: true }],\n  },\n  {\n    title: \"MAC Address\",\n    type: \"mac-addr\",\n    items: [{ name: \"value\", required: true }],\n  },\n  {\n    title: \"Network Traffic\",\n    type: \"network-traffic\",\n    items: [\n      // { name: \"src_ref\", required: false },\n      // { name: \"dst_ref\", required: false },\n      { name: \"src_port\", required: false },\n      { name: \"dst_port\", required: false },\n      { name: \"protocols\", required: false },\n    ],\n  },\n  {\n    title: \"Process\",\n    type: \"process\",\n    items: [\n      { name: \"pid\", required: false },\n      { name: \"name\", required: false },\n      { name: \"created\", required: false },\n      { name: \"command_line\", required: false },\n      // { name: \"opened_connection_refs\", required: false },\n      // { name: \"creator_user_ref\", required: false },\n      // { name: \"binary_ref\", required: false },\n      // { name: \"parent_ref\", required: false },\n    ],\n  },\n  {\n    title: \"Software\",\n    type: \"software\",\n    items: [\n      { name: \"name\", required: true },\n      { name: \"cpe\", required: false },\n      { name: \"vendor\", required: false },\n      { name: \"version\", required: false },\n    ],\n  },\n  {\n    title: \"URL\",\n    type: \"url\",\n    items: [{ name: \"value\", required: true }],\n  },\n  {\n    title: \"User Account\",\n    type: \"user-account\",\n    items: [\n      { name: \"user_id\", required: true },\n      { name: \"account_login\", required: false },\n      { name: \"account_type\", required: false },\n      { name: \"display_name\", required: false },\n      { name: \"is_service_account\", required: false },\n      { name: \"is_privileged\", required: false },\n      { name: \"is_disabled\", required: false },\n    ],\n  },\n  {\n    title: \"Windows™ Registry Key\",\n    type: \"windows-registry-key\",\n    items: [\n      { name: \"key\", required: true },\n      { name: \"values\", required: false },\n      { name: \"modified\", required: false },\n      // { name: \"creator_user_ref\", required: false },\n      { name: \"number_of_subkeys\", required: false },\n    ],\n  },\n];\n\nexport default stixLanguageV2;\n","const stixLanguageV2_1 = [\n  {\n    title: \"Artifact\",\n    type: \"artifact\",\n    items: [\n      { name: \"mime_type\", required: false },\n      { name: \"payload_bin\", required: false },\n      { name: \"url\", required: false },\n      { name: \"hashes.SHA-256\", required: false },\n      { name: \"hashes.MD5\", required: false },\n      { name: \"hashes.SHA-1\", required: false },\n      { name: \"encryption_algorithm\", required: false },\n      { name: \"decryption_key\", required: false },\n    ],\n  },\n  {\n    title: \"AS\",\n    type: \"autonomous-system\",\n    items: [\n      { name: \"number\", required: true },\n      { name: \"name\", required: false },\n      { name: \"rir\", required: false },\n    ],\n  },\n  {\n    title: \"Directory\",\n    type: \"directory\",\n    items: [\n      { name: \"path\", required: true },\n      { name: \"path_enc\", required: false },\n      { name: \"ctime\", required: false },\n      { name: \"mtime\", required: false },\n      { name: \"atime\", required: false },\n      // { name: \"contains_ref\", required: false },\n    ],\n  },\n  {\n    title: \"Domain Name\",\n    type: \"domain-name\",\n    items: [\n      { name: \"value\", required: true },\n      // { name: \"resolves_to_refs\", required: false },\n    ],\n  },\n  {\n    title: \"Email Address\",\n    type: \"email-addr\",\n    items: [\n      { name: \"value\", required: true },\n      { name: \"display_name\", required: false },\n      // { name: \"belongs_to_ref \", required: false },\n    ],\n  },\n  {\n    title: \"Email Message\",\n    type: \"email-message\",\n    items: [\n      { name: \"is_multipart\", required: true },\n      { name: \"date\", required: false },\n      { name: \"content_type\", required: false },\n      // { name: \"from_ref\", required: false },\n      // { name: \"sender_ref\", required: false },\n      // { name: \"to_refs\", required: false },\n      // { name: \"cc_refs\", required: false },\n      // { name: \"bcc-refs\", required: false },\n      { name: \"message_id\", required: false },\n      { name: \"subject\", required: false },\n      { name: \"received_lines\", required: false },\n      { name: \"additional_header_fields\", required: false },\n      { name: \"body\", required: false },\n      { name: \"body_multipart\", required: false },\n      // { name: \"raw_email_ref\", required: false },\n    ],\n  },\n  {\n    title: \"File\",\n    type: \"file\",\n    items: [\n      { name: \"extensions\", required: false },\n      { name: \"hashes.SHA-256\", required: false },\n      { name: \"hashes.MD5\", required: false },\n      { name: \"hashes.SHA-1\", required: false },\n      { name: \"size\", required: false },\n      { name: \"name\", required: false },\n      { name: \"name_enc\", required: false },\n      { name: \"magic_number_hex\", required: false },\n      { name: \"mime_type\", required: false },\n      { name: \"ctime\", required: false },\n      { name: \"mtime\", required: false },\n      { name: \"atime\", required: false },\n      // { name: \"parent_directory_ref\", required: false },\n      // { name: \"contains_refs\", required: false },\n      // { name: \"content_ref\", required: false },\n    ],\n  },\n  {\n    title: \"IPv4 Address\",\n    type: \"ipv4-addr\",\n    items: [\n      { name: \"value\", required: true },\n      // { name: \"resolves_to_refs\", required: false },\n      // { name: \"belongs_to_refs\", required: false },\n    ],\n  },\n  {\n    title: \"IPv6 Address\",\n    type: \"ipv6-addr\",\n    items: [\n      { name: \"value\", required: true },\n      // { name: \"resolves_to_refs\", required: false },\n      // { name: \"belongs_to_refs\", required: false },\n    ],\n  },\n  {\n    title: \"MAC Address\",\n    type: \"mac-addr\",\n    items: [{ name: \"value\", required: true }],\n  },\n  {\n    title: \"Mutex\",\n    type: \"mutex\",\n    items: [{ name: \"name\", required: true }],\n  },\n  {\n    title: \"Network Traffic\",\n    type: \"network-traffic\",\n    items: [\n      { name: \"extensions\", required: false },\n      { name: \"start\", required: false },\n      { name: \"end\", required: false },\n      { name: \"is_active\", required: false },\n      // { name: \"src_ref\", required: false },\n      // { name: \"dst_ref\", required: false },\n      { name: \"src_port\", required: false },\n      { name: \"dst_port\", required: false },\n      { name: \"protocols\", required: true },\n      { name: \"src_byte_count\", required: false },\n      { name: \"dst_byte_count\", required: false },\n      { name: \"src_packets\", required: false },\n      { name: \"dst_packets\", required: false },\n      { name: \"ipfix\", required: false },\n      // { name: \"src_payload_ref\", required: false },\n      // { name: \"dst_payload_ref\", required: false },\n      // { name: \"encapsulates_refs\", required: false },\n      // { name: \"encapsulated_by_ref\", required: false },\n    ],\n  },\n  {\n    title: \"Process\",\n    type: \"process\",\n    items: [\n      { name: \"extensions\", required: false },\n      { name: \"is_hidden\", required: false },\n      { name: \"pid\", required: false },\n      { name: \"created_time\", required: false },\n      { name: \"cwd\", required: false },\n      { name: \"command_line\", required: false },\n      { name: \"environment_variables\", required: false },\n      // { name: \"opened_connection_refs\", required: false },\n      // { name: \"creator_user_ref\", required: false },\n      // { name: \"image_ref\", required: false },\n      // { name: \"parent_ref\", required: false },\n      // { name: \"child_refs\", required: false },\n    ],\n  },\n  {\n    title: \"Software\",\n    type: \"software\",\n    items: [\n      { name: \"name\", required: true },\n      { name: \"cpe\", required: false },\n      { name: \"swid\", required: false },\n      { name: \"languages\", required: false },\n      { name: \"vendor\", required: false },\n      { name: \"version\", required: false },\n    ],\n  },\n  {\n    title: \"URL\",\n    type: \"url\",\n    items: [{ name: \"value\", required: true }],\n  },\n  {\n    title: \"User Account\",\n    type: \"user-account\",\n    items: [\n      { name: \"extensions\", required: false },\n      { name: \"user_id\", required: true },\n      { name: \"credential\", required: false },\n      { name: \"account_login\", required: false },\n      { name: \"account_type\", required: false },\n      { name: \"display_name\", required: false },\n      { name: \"is_service_account\", required: false },\n      { name: \"is_privileged\", required: false },\n      { name: \"can_escalate_privs\", required: false },\n      { name: \"is_disabled\", required: false },\n      { name: \"account_created\", required: false },\n      { name: \"account_expires\", required: false },\n      { name: \"credential_last_changed\", required: false },\n      { name: \"account_first_login\", required: false },\n      { name: \"account_last_login\", required: false },\n    ],\n  },\n  {\n    title: \"Windows™ Registry Key\",\n    type: \"windows-registry-key\",\n    items: [\n      { name: \"key\", required: false },\n      { name: \"values\", required: false },\n      { name: \"modified_time\", required: false },\n      // { name: \"creator_user_ref\", required: false },\n      { name: \"number_of_subkeys\", required: false },\n    ],\n  },\n];\n\nexport default stixLanguageV2_1;\n","export function filterFieldsForValue(fields, value) {\n  if (!value || value === \"\") return fields;\n  const lowerCaseValue = value.toLowerCase();\n  let filteredFields = fields.filter(\n    (category) =>\n      category.title.toLowerCase().includes(lowerCaseValue) ||\n      category.type.includes(lowerCaseValue)\n  );\n  filteredFields = filteredFields.filter(\n    (category) => category.items.length > 0\n  );\n  return filteredFields;\n}\n","import {\n  UPDATE_SEARCH_FIELD_VALUE,\n  CHANGE_STIX_VERSION,\n} from \"../actions/stix\";\nimport stixLanguageV2_0 from \"../../global/stixLangV2\";\nimport stixLanguageV2_1 from \"../../global/stixLangV2_1\";\nimport { filterFieldsForValue } from \"../../components/STIX/utils\";\nimport { STIX_VERSION } from \"../../global/constants\";\n\nconst INITIAL_STATE = {\n  stixFields: stixLanguageV2_0,\n  fieldSearch: \"\",\n  stixVersion: STIX_VERSION.V_2_0,\n};\n\nconst STIXReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UPDATE_SEARCH_FIELD_VALUE: {\n      switch (state.stixVersion) {\n        case STIX_VERSION.V_2_0: {\n          return {\n            ...state,\n            fieldSearch: action.payload.value,\n            stixFields: filterFieldsForValue(\n              stixLanguageV2_0,\n              action.payload.value\n            ),\n          };\n        }\n        case STIX_VERSION.V_2_1: {\n          return {\n            ...state,\n            fieldSearch: action.payload.value,\n            stixFields: filterFieldsForValue(\n              stixLanguageV2_1,\n              action.payload.value\n            ),\n          };\n        }\n        default: {\n          return {\n            ...state,\n            fieldSearch: action.payload.value,\n            stixFields: filterFieldsForValue(\n              stixLanguageV2_0,\n              action.payload.value\n            ),\n          };\n        }\n      }\n    }\n\n    case CHANGE_STIX_VERSION: {\n      switch (action.payload.version) {\n        case STIX_VERSION.V_2_0: {\n          return {\n            ...state,\n            fieldSearch: \"\",\n            stixVersion: action.payload.version,\n            stixFields: stixLanguageV2_0,\n          };\n        }\n        case STIX_VERSION.V_2_1: {\n          return {\n            ...state,\n            fieldSearch: \"\",\n            stixVersion: action.payload.version,\n            stixFields: stixLanguageV2_1,\n          };\n        }\n        default: {\n          return state;\n        }\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default STIXReducer;\n","import { v4 as uuidv4 } from \"uuid\";\nimport {\n  ADD_FIELD,\n  ADD_VALUE,\n  DELETE_FIELD,\n  DELETE_VALUE,\n  UPDATE_VALUE,\n  UPDATE_MAPPINGS_FILTER_FIELD_VALUE,\n  CLEAR_FROM_STIX_MAPPINGS,\n  SHOW_CUSTOM_FIELD_MODAL,\n  CLOSE_CUSTOM_FIELD_MODAL,\n  UPDATE_FROM_STIX_MAPPINGS_FROM_FILE,\n} from \"../actions/from_stix\";\n\nconst INITIAL_STATE = {\n  mapping: {},\n  fieldMappingFilter: \"\",\n  customFieldModalShow: false,\n};\n\nconst FromSTIXReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_FIELD: {\n      const field = action.payload.field;\n      return {\n        ...state,\n        mapping: {\n          ...state.mapping,\n          [field]: {\n            required: action.payload.required,\n            values: [],\n          },\n        },\n      };\n    }\n\n    case DELETE_FIELD: {\n      if (action.payload.field in state.mapping) {\n        const { [action.payload.field]: v, ...mapping } = state.mapping;\n        return {\n          ...state,\n          mapping: mapping,\n        };\n      }\n      return state;\n    }\n\n    case ADD_VALUE: {\n      if (action.payload.field in state.mapping) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [action.payload.field]: {\n              ...state.mapping[action.payload.field],\n              values: [\n                ...state.mapping[action.payload.field].values,\n                { value: \"\", id: uuidv4() },\n              ],\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    case DELETE_VALUE: {\n      if (action.payload.field in state.mapping) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [action.payload.field]: {\n              ...state.mapping[action.payload.field],\n              values: state.mapping[action.payload.field].values.filter(\n                (o) => o.id !== action.payload.id\n              ),\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    case UPDATE_VALUE: {\n      if (action.payload.field in state.mapping) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [action.payload.field]: {\n              ...state.mapping[action.payload.field],\n              values: state.mapping[action.payload.field].values.map((o) =>\n                o.id === action.payload.id\n                  ? { ...o, value: action.payload.value }\n                  : o\n              ),\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    case UPDATE_MAPPINGS_FILTER_FIELD_VALUE: {\n      return {\n        ...state,\n        fieldMappingFilter: action.payload.value,\n      };\n    }\n\n    case UPDATE_FROM_STIX_MAPPINGS_FROM_FILE: {\n      return {\n        ...state,\n        mapping: action.payload.mappings,\n      };\n    }\n\n    case CLEAR_FROM_STIX_MAPPINGS: {\n      return {\n        ...state,\n        mapping: {},\n      };\n    }\n\n    case SHOW_CUSTOM_FIELD_MODAL: {\n      return {\n        ...state,\n        customFieldModalShow: true,\n      };\n    }\n\n    case CLOSE_CUSTOM_FIELD_MODAL: {\n      return {\n        ...state,\n        customFieldModalShow: false,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default FromSTIXReducer;\n","import { v4 as uuidv4 } from \"uuid\";\n\nimport {\n  ADD_DATASOURCE_FIELD,\n  ADD_NEW_OBJECT,\n  CLOSE_NEW_OBJECT_MODAL,\n  OPEN_NEW_OBJECT_MODAL,\n  REMOVE_DATASOURCE_FIELD,\n  REMOVE_OBJECT,\n  UPDATE_DATASOURCE_FIELD,\n  ADD_STIX_FIELD,\n  REMOVE_STIX_FIELD,\n  UPDATE_STIX_FIELD,\n  CLEAR_TO_STIX_MAPPINGS,\n  UPDATE_TO_STIX_MAPPINGS_FROM_FILE,\n  OPEN_SELECT_FIELD_MODAL,\n  CLOSE_SELECT_FIELD_MODAL,\n} from \"../actions/to_stix\";\n\nconst INITIAL_STATE = {\n  isNewObjectModalOpen: false,\n  selectFieldModal: null,\n  mapping: {},\n};\n\nconst ToSTIXReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case OPEN_NEW_OBJECT_MODAL: {\n      return {\n        ...state,\n        isNewObjectModalOpen: true,\n      };\n    }\n\n    case CLOSE_NEW_OBJECT_MODAL: {\n      return {\n        ...state,\n        isNewObjectModalOpen: false,\n      };\n    }\n\n    case OPEN_SELECT_FIELD_MODAL: {\n      return {\n        ...state,\n        selectFieldModal: {\n          objectKey: action.payload.objectKey,\n          sourceFieldId: action.payload.sourceFieldId,\n          stixFieldId: action.payload.stixFieldId,\n        },\n      };\n    }\n\n    case CLOSE_SELECT_FIELD_MODAL: {\n      return {\n        ...state,\n        selectFieldModal: null,\n      };\n    }\n\n    case ADD_NEW_OBJECT: {\n      if (!(action.payload?.name in state.mapping)) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [action.payload.name]: {},\n          },\n        };\n      }\n      return state;\n    }\n\n    case REMOVE_OBJECT: {\n      if (action.payload?.name in state.mapping) {\n        const { [action.payload?.name]: omit, ...restOfMapping } =\n          state.mapping;\n        return {\n          ...state,\n          mapping: restOfMapping,\n        };\n      }\n      return state;\n    }\n\n    case ADD_DATASOURCE_FIELD: {\n      const objectName = action.payload?.objectName;\n      const fieldName = action.payload?.fieldName;\n      if (objectName in state.mapping) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [objectName]: {\n              ...state.mapping[objectName],\n              [uuidv4()]: {\n                field: fieldName,\n                mapped_to: [],\n              },\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    case UPDATE_DATASOURCE_FIELD: {\n      const objectName = action.payload?.objectName;\n      const fieldName = action.payload?.fieldName;\n      const fieldId = action.payload?.fieldId;\n      if (objectName in state.mapping && fieldId in state.mapping[objectName]) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [objectName]: {\n              ...state.mapping[objectName],\n              [fieldId]: {\n                ...state.mapping[objectName][fieldId],\n                field: fieldName,\n              },\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    case REMOVE_DATASOURCE_FIELD: {\n      const objectName = action.payload?.objectName;\n      const fieldId = action.payload?.fieldId;\n      if (objectName in state.mapping && fieldId in state.mapping[objectName]) {\n        const { [fieldId]: omit, ...restOfFields } = state.mapping[objectName];\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [objectName]: restOfFields,\n          },\n        };\n      }\n      return state;\n    }\n\n    case ADD_STIX_FIELD: {\n      const objectName = action.payload?.objectName;\n      const fieldId = action.payload?.fieldId;\n      const key = action.payload?.key;\n      if (objectName in state.mapping) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [objectName]: {\n              ...state.mapping[objectName],\n              [fieldId]: {\n                ...state.mapping[objectName][fieldId],\n                mapped_to: [\n                  ...state.mapping[objectName][fieldId].mapped_to,\n                  {\n                    id: uuidv4(),\n                    key: key,\n                  },\n                ],\n              },\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    case REMOVE_STIX_FIELD: {\n      const objectName = action.payload?.objectName;\n      const fieldId = action.payload?.fieldId;\n      const mappingId = action.payload?.mappingId;\n      if (objectName in state.mapping && fieldId in state.mapping[objectName]) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [objectName]: {\n              ...state.mapping[objectName],\n              [fieldId]: {\n                ...state.mapping[objectName][fieldId],\n                mapped_to: state.mapping[objectName][fieldId].mapped_to.filter(\n                  (o) => o.id !== mappingId\n                ),\n              },\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    case UPDATE_STIX_FIELD: {\n      const objectName = action.payload?.objectName;\n      const sourceFieldId = action.payload?.fieldId;\n      const stixFieldId = action.payload?.mappingId;\n      const value = action.payload?.value;\n      const type = action.payload?.type;\n      if (\n        objectName in state.mapping &&\n        sourceFieldId in state.mapping[objectName]\n      ) {\n        return {\n          ...state,\n          mapping: {\n            ...state.mapping,\n            [objectName]: {\n              ...state.mapping[objectName],\n              [sourceFieldId]: {\n                ...state.mapping[objectName][sourceFieldId],\n                mapped_to: state.mapping[objectName][\n                  sourceFieldId\n                ].mapped_to.map((o) =>\n                  o.id === stixFieldId ? { ...o, [type]: value } : o\n                ),\n              },\n            },\n          },\n        };\n      }\n      return state;\n    }\n\n    case CLEAR_TO_STIX_MAPPINGS: {\n      return {\n        ...state,\n        mapping: {},\n      };\n    }\n\n    case UPDATE_TO_STIX_MAPPINGS_FROM_FILE: {\n      return {\n        ...state,\n        mapping: action.payload.mappings,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default ToSTIXReducer;\n","import { combineReducers } from \"redux\";\nimport STIXReducer from \"./stix\";\nimport FromSTIXReducer from \"./from_stix\";\nimport ToSTIXReducer from \"./to_stix\";\n\nconst combinedReducers = combineReducers({\n  stix: STIXReducer,\n  fromStix: FromSTIXReducer,\n  toStix: ToSTIXReducer,\n});\n\nexport default combinedReducers;\n","import { createStore } from \"redux\";\nimport CombinedReducers from \"./reducers\";\n\nconst store = createStore(\n  CombinedReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport default store;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { Content } from \"carbon-components-react\";\nimport \"./App.scss\";\n\nimport Header from \"./components/Header\";\nimport Welcome from \"./components/Welcome/Welcome\";\nimport FromSTIX from \"./components/FromSTIX\";\nimport ToSTIX from \"./components/ToSTIX\";\nimport About from \"./components/About\";\nimport store from \"./store/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <Content>\n          <Switch>\n            <Route path=\"/from_stix\">\n              <FromSTIX />\n            </Route>\n            <Route path=\"/to_stix\">\n              <ToSTIX />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/\">\n              <Welcome />\n            </Route>\n          </Switch>\n        </Content>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}